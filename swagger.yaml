# DA FARE:
# aggiungere parametri nei POST

swagger: "2.0"
info:
  version: "1.0"
  title: "hackerino"
  description: Polls is a simple API allowing consumers to view polls and vote in them.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: hackerino.herokuapp.com
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /exams:
    get:
      description: Returns exams list.
      tags:
        - /exams
      responses:
        "200":
          description: An exams list.
          schema:
            type: object
            properties:
              tot_exams:
                type: integer
              exams:
                type: array
                items:
                  $ref: "#/definitions/Exam"
        default:
          description: Unexpected error
    post:
      description: Adds an exam.
      tags:
        - /exams
      responses:
        "201":
          description: Exam created.
          schema:
            $ref: "#/definitions/Exam"
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /exams/{examID}:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
    get:
      description: Returns an exam by examID.
      tags:
        - /exams
      responses:
        "200":
          description: An exam.
          schema:
            $ref: "#/definitions/Exam"
        "404":
          description: An exam with the specified examID was not found.
        default:
          description: Unexpected error
    put:
      description: Updates/creates an exam by examID.
      tags:
        - /exams
      responses:
        "200":
          description: Exam updated.
        "201":
          description: Exam created.
        "400":
          description: Bad request.
        default:
          description: Unexpected error
    delete:
      description: Deletes an exam by examID.
      tags:
        - /exams
      responses:
        "204":
          description: Exam deleted.
        "404":
          description: Could not delete exam with the specified examID (exam not found).
        default:
          description: Unexpected error

  /exams/{examID}/reviews:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
    get:
      description: Returns submission reviews for given exam.
      tags:
        - /exams/{examID}/reviews
      responses:
        "200":
          description: A reviews list.
          schema:
            type: array
            items:
              $ref: "#/definitions/Review"
        default:
          description: Unexpected error
    post:
      description: Adds a submission review to an exam.
      tags:
        - /exams/{examID}/reviews
      responses:
        "204":
          description: Student added to exam.
        "400":
          description: Bad request.
        "404":
          description: Exam not found.
        default:
          description: Unexpected error
  /exams/{examID}/reviews/{reviewID}:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
      - in: path
        name: reviewID
        type: integer
        required: true
    get:
      description: Returns a submission review by examID and reviewID.
      tags:
        - /exams/{examID}/reviews
      responses:
        "200":
          description: A review.
          schema:
            $ref: "#/definitions/Exam"
        "404":
          description: A review with the specified reviewID was not found.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a submission review of an exam by reviewID.
      tags:
        - /exams/{examID}/reviews
      responses:
        "204":
          description: Teacher added to exam.
        "400":
          description: Bad request.
        "404":
          description: Exam not found.
        default:
          description: Unexpected error

  /exams/{examID}/submissions:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
    get:
      description: Returns submissions list for an exam.
      tags:
        - /exams/{examID}/submissions
      responses:
        "200":
          description: A submissions list of an exam.
          schema:
            type: array
            items:
              $ref: "#/definitions/Submission"
        default:
          description: Unexpected error
    post:
      description: Adds a submission to an exam.
      tags:
        - /exams/{examID}/submissions
      responses:
        "204":
          description: Task added to exam.
        "400":
          description: Bad request.
        "404":
          description: Exam not found.
        default:
          description: Unexpected error

  /exams/{examID}/submissions:
    parameters:
      - $ref: "#/parameters/examID"
    get:
      description: Returns the list of submissions relative to this exam.
      parameters:
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
      tags:
        - /exams
      responses:
        "200":
          description: A list of submissions
          schema:
            type: object
            properties:
              tot_submissions:
                type: integer
              submissions:
                type: array
                items:
                  $ref: "#/definitions/Submission"
        default:
          description: Unexpected error

  /reviews:
    get:
      description: Returns a submission by examID and submissionID.
      tags:
        - /exams/{examID}/submissions
      responses:
        "200":
          description: A submission of an exam.
          schema:
            $ref: "#/definitions/Submission"
        "404":
          description: A submission with the specified submissionID was not found for the given exam.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a submission of an exam by submissionID.
      tags:
        - /exams/{examID}/submissions
      responses:
        "200":
          description: Submission updated.
        "201":
          description: Submission added to the exam.
        "404":
          description: Could not update submission with the specified submissionID (submission not found).
        default:
          description: Unexpected error
    delete:
      description: Deletes a submission from an exam by ID.
      tags:
        - /exams/{examID}/submissions
      responses:
        "204":
          description: Submission removed.
        "404":
          description: Could not remove the submission with the specified submissionID (submission not found).
        default:
          description: Unexpected error

  /exams/{examID}/tasks:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
    get:
      description: Returns a tasks list for an exam.
      tags:
        - /exams/{examID}/tasks
      responses:
        "200":
          description: A list of tasks used in an exam.
        default:
          description: Unexpected error
    post:
      description: Adds a task to an exam.
      tags:
        - /exams/{examID}/tasks
      responses:
        "201":
          description: Review submitted.
          schema:
            $ref: "#/definitions/Review"
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /exams/{examID}/tasks/{taskID}:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
      - in: path
        name: taskID
        type: integer
        required: true
    get:
      description: Returns a task by examID and taskID.
      tags:
        - /exams/{examID}/tasks
      responses:
        "200":
          description: A task of an exam.
        "404":
          description: A task with the specified taskID was not found for the given exam.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a task of an exam by taskID.
      tags:
        - /exams/{examID}/tasks
      responses:
        "200":
          description: Task updated.
        "201":
          description: Task added to the exam.
        "404":
          description: Could not update task with the specified taskID (task not found).
        default:
          description: Unexpected error
    delete:
      description: Deletes a task from an exam by taskID.
      tags:
        - /exams/{examID}/tasks
      responses:
        "204":
          description: Task removed from exam.
        "404":
          description: Could not remove the task with the specified taskID from exam (task not found).
        default:
          description: Unexpected error

  /exams/{examID}/TeacherAssistants:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
    get:
      description: Returns submissions list 
      parameters:
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
        - in: query
          name: examID
          type: integer
        - in: query
          name: taskID
          type: integer
        - in: query
          name: studentID
          type: integer
      tags:
        - /exams/{examID}/TeacherAssistants
      responses:
        "200":
          description: A TeacherAssistant list.
        default:
          description: Unexpected error
    post:
      description: Adds a submission 
      parameters:
        - in: body
          name: submission
          schema:
            type: object
            required:
              - studentID
              - taskID
              - examID
              - answer
              - chosen_answer
            properties:  
              studentID:
                type: integer
              taskID:
                type: integer
              examID:
                type: integer
              answer:
                description: If it is a m-choice, then ""
                type: string
              chosen_answer:
                description: If it is an open question, then -1
                type: integer
      tags:          
        - /submissions
      responses:
        "201":
          description: Submission added to the exam.
          schema:
            $ref: "#/definitions/Submission"
        "423":
          description: "Deadline reached: cannot change submission."
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /exams/{examID}/TeacherAssistants/{TeacherAssistantID}:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
      - in: path
        name: TeacherAssistantID
        type: integer
        required: true
    get:
      description: Returns a TeacherAssistant by TeacherAssistantID.
      tags:
        - /exams/{examID}/TeacherAssistants
      responses:
        "200":
          description: A TeacherAssistant object.
        "404":
          description: A TeacherAssistant with the specified TeacherAssistantID was not found.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a TeacherAssistant by TeacherAssistantID.
      tags:
        - /exams/{examID}/TeacherAssistants
      responses:
        "200":
          description: TeacherAssistant updated.
        "201":
          description: TeacherAssistant created.
        "404":
          description: Could not update the TeacherAssistant with the specified TeacherAssistantID (TeacherAssistant not found).
        default:
          description: Unexpected error
    delete:
      description: Removes a TeacherAssistant by TeacherAssistantID.
      tags:
        - /exams/{examID}/TeacherAssistants
      responses:
        "204":
          description: TeacherAssistant removed.
        "404":
          description: Could not remove the TeacherAssistant with the specified TeacherAssistantID (TeacherAssistant not found).
        default:
          description: Unexpected error

  /submissions/{submissionID}/reviews:
    parameters:
      - $ref: "#/parameters/submissionID"
    get:
      description: Returns a list of reviews of a given submission.
      tags:
        - /submissions
      responses:
        "200":
          description: A list of reviews.
          schema:
            type: object
            properties:
              tot_reviews:
                type: integer
              reviews:
                type: array
                items:
                  $ref: "#/definitions/Review"
        "404":
          description: A submission with the specified submissionID was not found for the given exam.
        default:
          description: Unexpected error

  /teachers:
    get:
      description: Returns a list of students signed up for an exam.
      tags:
        - /exams/{examID}/group
      responses:
        "200":
          description: A list of students signed up for an exam.
        default:
          description: Unexpected error
    post:
      description: Adds a teacher.
      parameters:
        - in: body
          name: teacher
          schema:
            type: object
            required:
              - email
              - firstname
              - lastname
            properties:  
              email:  
                type: string
              firstname:
                type: string
              lastname:
                type: string
      tags:
        - /exams/{examID}/group
      responses:
        "201":
          description: teacher created.
          schema:
            $ref: "#/definitions/Teacher"
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /exams/{examID}/group/{studentID}:
    parameters:
      - in: path
        name: examID
        type: integer
        required: true
      - in: path
        name: studentID
        type: integer
        required: true
    get:
      description: Returns a student signed up for an exam by studentID.
      tags:
        - /exams/{examID}/group
      responses:
        "200":
          description: A teacher.
          schema:
            $ref: "#/definitions/Exam"
        "404":
          description: A student with the specified studentID was not found signed up for the given exam.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a student signed up for an exam by studentID.
      tags:
        - /exams/{examID}/group
      responses:
        "200":
          description: Updated a student signed up for the exam.
        "201":
          description: Student signed up for an exam.
        "404":
          description: Could not update student with the specified studentID (student not signed up).
        default:
          description: Unexpected error
    delete:
      description: Removes a student from an exam by studentID.
      tags:
        - /exams/{examID}/group
      responses:
        "204":
          description: Student removed from exam.
        "404":
          description: Could not remove the student with the specified studentID from exam (student not signed up).
        default:
          description: Unexpected error

  /teachers/{teacherID}/exams:
    parameters:
      - $ref: "#/parameters/teacherID"
    get:
      description: Returns the exams a teacher partecipates to.
      tags:
        - /teachers
      responses:
        "200":
          description: A list of exams.
          schema:
            type: object
            properties:
              tot_exams:
                type: integer
              exams:
                type: array
                items:
                  $ref: "#/definitions/Exam"
        "404":
          description: A teacher with the specified teacherID was not found.
        default:
          description: Unexpected error

  /students:
    get:
      description: Returns students list.
      parameters:
        - $ref: "#/parameters/limit"
        - $ref: "#/parameters/offset"
        - in: query
          name: email
          type: string
      tags:
        - /students
      responses:
        "200":
          description: A students list.
          schema:
            type: object
            properties:
              tot_students:
                type: integer
              students:
                type: array
                items:
                  $ref: "#/definitions/Student"
        default:
          description: Unexpected error
    post:
      description: Adds a student.
      parameters:
        - in: body
          name: student
          schema:
            type: object
            required:
              - email
              - firstname
              - lastname
            properties:  
              email:  
                type: string
              firstname:
                type: string
              lastname:
                type: string
      tags:
        - /students
      responses:
        "201":
          description: Student created.
          schema:
            $ref: "#/definitions/Student"
        "400":
          description: Bad request.
        default:
          description: Unexpected error

  /students/{studentID}:
    parameters:
      - in: path
        name: studentID
        type: integer
        required: true
    get:
      description: Returns a student by id.
      tags:
        - /students
      responses:
        "200":
          description: A student.
          schema:
            $ref: "#/definitions/Student"
        "404":
          description: A student with the specified studentID was not found.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a student by studentID.
      tags:
        - /students
      responses:
        "200":
          description: Student updated.
        "201":
          description: Student created.
        "400":
          description: Bad request.
        default:
          description: Unexpected error
    delete:
      description: Removes a student by studentID.
      tags:
        - /students
      responses:
        "204":
          description: Student removed.
        "404":
          description: Could not remove the student with the specified ID (student not found).
        default:
          description: Unexpected error

  /students/{studentID}/exams:
    parameters:
      - $ref: "#/parameters/studentID"
    get:
      description: Returns the exams a student is signed up for.
      tags:
        - /students
      responses:
        "200":
          description: A list of exams.
          schema:
            type: object
            properties:
              tot_exams:
                type: integer
              exams:
                type: array
                items:
                  $ref: "#/definitions/Exam"
        "404":
          description: A student with the specified studentID was not found.
        default:
          description: Unexpected error

  /students/{studentID}/submissions:
    parameters:
      - $ref: "#/parameters/studentID"
    get:
      description: Returns the submissions a student has sent.
      tags:
        - /students
      responses:
        "200":
          description: A list of submissions.
          schema:
            type: object
            properties:
              tot_submissions:
                type: integer
              submissions:
                type: array
                items:
                  $ref: "#/definitions/Submission"
        "404":
          description: A student with the specified studentID was not found.
        default:
          description: Unexpected error

  /students/{studentID}/reviews:
    parameters:
      - $ref: "#/parameters/studentID"
    get:
      description: Returns the reviews a student has sent.
      tags:
        - /students
      responses:
        "200":
          description: A list of reviews.
          schema:
            type: object
            properties:
              tot_reviews:
                type: integer
              reviews:
                type: array
                items:
                  $ref: "#/definitions/Review"
        "404":
          description: A student with the specified studentID was not found.
        default:
          description: Unexpected error

  /tasks:
    get:
      description: Returns a tasks list.
      tags:
        - /tasks
      responses:
        "200":
          description: A tasks list.
          schema:
            type: object
            properties:
              tot_tasks:
                type: integer
              tasks:
                type: array
                items:
                  $ref: "#/definitions/Task"
        default:
          description: Unexpected error
    post:
      description: Adds a task.
      parameters:
        - in: body
          name: task
          schema:
            type: object
            required:
              - type
              - question
              - possible_answers
            properties:  
              type:
                type: string
                enum: ["choice", "open"]
              question:  
                type: string
              possible_answers:
                type: array
                items:
                  type: string
      tags:
        - /tasks
      responses:
        "201":
          description: Task created.
          schema:
            $ref: "#/definitions/Task"
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /tasks/{taskID}:
    parameters:
      - in: path
        name: taskID
        type: integer
        required: true
    get:
      description: Returns a task by taskID.
      tags:
        - /tasks
      responses:
        "200":
          description: A task.
          schema:
            $ref: "#/definitions/Task"
        "404":
          description: A task with the specified taskID was not found.
        default:
          description: Unexpected error
    put:
      description: Updates/creates a task by taskID.
      tags:
        - /tasks
      responses:
        "200":
          description: Task updated.
        "201":
          description: Task created.
        "400":
          description: Bad request.
        default:
          description: Unexpected error
    delete:
      description: Removes a task by taskID.
      tags:
        - /tasks
      responses:
        "204":
          description: Task removed.
        "404":
          description: Could not remove the task with the specified taskID (task not found).
        default:
          description: Unexpected error

  /tasks/{taskID}/exams:
    parameters:
      - $ref: "#/parameters/taskID"
    get:
      description: Returns the exams where this task is used.
      tags:
        - /tasks
      responses:
        "200":
          description: A list of exams.
          schema:
            type: object
            properties:
              tot_exams:
                type: integer
              exams:
                type: array
                items:
                  $ref: "#/definitions/Exam"
        "404":
          description: A task with the specified taskID was not found.
        default:
          description: Unexpected error

  /tasks/{taskID}/submissions:
    parameters:
      - $ref: "#/parameters/taskID"
    get:
      description: Returns the list of submission to this task.
      tags:
        - /tasks
      responses:
        "200":
          description: A list of submission to this task.
          schema:
            type: object
            properties:
              tot_submissions:
                type: integer
              submissions:
                type: array
                items:
                  $ref: "#/definitions/Submission"
        "404":
          description: A task with the specified taskID was not found.
        default:
          description: Unexpected error

  /tasks/{taskID}/vote:
    parameters:
      - $ref: "#/parameters/taskID"
    post:
      description: Send a review vote for a given task.
      tags:
        - /tasks
      responses:
        "204":
          description: Your vote was received and the task's rating is updated.
        "404":
          description: A task with the specified taskID was not found.
        default:
          description: Unexpected error

tags:
  - name: /exams
  - name: /exams/{examID}/reviews
  - name: /exams/{examID}/submissions
  - name: /exams/{examID}/tasks
  - name: /exams/{examID}/TeacherAssistants
  - name: /exams/{examID}/group
  - name: /students
  - name: /tasks

definitions:
  Exam:
    title: Exam
    type: object
    properties:
      id:
        type: integer
      date:
        type: string
      deadline:
        type: string
      review-deadline:
        type: string
      n_teachers:
        type: integer
      n_students:
        type: integer
      n_tasks:
        type: integer

  Student:
    title: Student
  Task:
    title: Task
  Review:
    title: Review
    type: object
    properties:
      id:
        type: integer
      student:
        description: studentID
        type: integer
      submission:
        description: submissionID
        type: integer
      mark:
        description: mark given by the student to this submission
        type: number

  Submission:
    title: Submission
    type: object
    properties:
      id:
        type: integer
      student:
        description: studentID
        type: integer
      task:
        description: taskID
        type: integer
      exam:
        description: examID
        type: integer
      answer:
        description: (If open question)
        type: string
      chosen_answer:
        description: (If multiple-choice question, else -1)
        type: integer
      review_points:
        type: number
      final_points:
        type: number

  Example:
    title: Example
    type: object
    properties:
      votes:
        type: integer
        format: int32
      choice:
        type: string
    required:
      - votes
      - choice
