swagger: "2.0"
info:
  version: "1.0"
  title: "hackerino"
  description: Polls is a simple API allowing consumers to view polls and vote in them.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: hackerino.herokuapp.com/
basePath: /v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /exams:
    get:
      summary: Returns exams list.
      tags:
      - /exams
      responses:
        "200":
          description: An exam list.
        default:
          description: Unexpected error
    post:
      summary: Adds an exam.
      tags:
      - /exams
      responses:
        "201":
          description: Exam created.
        "400":
          description: Bad request.
        default:
          description: Unexpected error
  /exams/{examID}:
    get:
      summary: Returns exam by ID.
      tags:
      - /exams
      responses:
        "200":
          description: An exam.
        "404":
          description: An exam with the specified ID was not found.
        default:
          description: Unexpected error
    put:
      summary: Updates/creates exam by ID.
      tags:
      - /exams
      responses:
        "200":
          description: Exam updated.
        "201":
          description: Exam created.
        "404":
          description: Could not update exam with the specified ID (exam not found).
        default:
          description: Unexpected error
    delete:
      summary: Deletes exam by ID.
      tags:
      - /exams
      responses:
        "204":
          description: Exam deleted.
        "404":
          description: Could not delete exam with the specified ID (exam not found).
        default:
          description: Unexpected error
  /exams/{examID}/reviews:
    get:
      summary: Returns
      tags:
      - /exams/{examID}/reviews
      responses:
    post:
      summary:
      tags:
      - /exams/{examID}/reviews
      responses:
  /exams/{examID}/reviews/{reviewID}:
    get:
      summary:
      tags:
      - /exams/{examID}/reviews
      responses:
    put:
      summary:
      tags:
      - /exams/{examID}/reviews
      responses:
    delete:
      summary:
      tags:
      - /exams/{examID}/reviews
      responses:
  /exams/submissions:
    get:
      summary:
      tags:
      - /exams/{examID}/submissions
      responses:
    post:
      summary:
      tags:
      - /exams/{examID}/submissions
      responses:
  /exams/{examID}/submissions/{submissionID}:
    get:
      summary:
      tags:
      - /exams/{examID}/submissions
      responses:
    put:
      summary:
      tags:
      - /exams/{examID}/submissions
      responses:
    delete:
      summary:
      tags:
      - /exams/{examID}/submissions
      responses:
  /exams/{examID}/tasks:
    get:
      summary:
      tags:
      - /exams/{examID}/tasks
      responses:
    post:
      summary:
      tags:
      - /exams/{examID}/tasks
      responses:
  /exams/{examID}/tasks/{taskID}:
    get:
      summary:
      tags:
      - /exams/{examID}/tasks
      responses:
    put:
      summary:
      tags:
      - /exams/{examID}/tasks
      responses:
    delete:
      summary:
      tags:
      - /exams/{examID}/tasks
      responses:
  /exams/{examID}/group:
    get:
      summary:
      tags:
      - /exams/{examID}/group
      responses:
    post:
      summary:
      tags:
      - /exams/{examID}/group
      responses:
  /exams/{examID}/group/{studentID}:
    get:
      summary:
      tags:
      - /exams/{examID}/group
      responses:
    put:
      summary:
      tags:
      - /exams/{examID}/group
      responses:
    delete:
      summary:
      tags:
      - /exams/{examID}/group
      responses:
  /students:
    get:
      summary:
      tags:
      - /students
      responses:
    post:
      summary:
      tags:
      - /students
      responses:
  /students/{studentEmail}:
    get:
      summary: Returns a student by email.
      tags:
      - /students
      description: insert text
      parameters:
        - name: studentEmail
          in: path
          required: true
          description: The Email of the student to return.
      responses:
        "200":
          description: A student object.
        "400":
          description: The specified email is invalid.
        "404":
          description: A student with the specified email was not found.
        default:
          description: Unexpected error
    put:
      summary:
      tags:
      - /students
      responses:
    delete:
      summary:
      tags:
      - /students
      responses:
  /tasks:
    get:
      summary:
      tags:
      - /tasks
      responses:
    post:
      summary:
      tags:
      - /tasks
      responses:
  /tasks/{taskID}:
    get:
      summary:
      tags:
      - /tasks
      responses:
    put:
      summary:
      tags:
      - /tasks
      responses:
    delete:
      summary:
      tags:
      - /tasks
      responses:
  
tags:
  - name: /exams
  - name: /exams/{examID}/reviews
  - name: /exams/{examID}/submissions
  - name: /exams/{examID}/tasks
  - name: /exams/{examID}/TAs
  - name: /exams/{examID}/group
  - name: /students
  - name: /tasks
  - name: /TAs

definitions:
  Exam:
    title: Exam
  Group:
    title: Group
  Student:
    title: Student
  Task:
    title: Task
  Review:
    title: Review
  Submission:
    title: Submission
  TA:
    title: TA

  Example:
    title: Example
    type: object
    properties:
      votes:
        type: integer
        format: int32
      choice:
        type: string
    required:
      - votes
      - choice
